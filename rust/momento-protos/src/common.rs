// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Present {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PresentAndNotEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub value_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Absent {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Equal {
    #[prost(bytes = "vec", tag = "1")]
    pub value_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbsentOrEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub value_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NotEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub value_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Unbounded {}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Empty {}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PresentAndNotHashEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub hash_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PresentAndHashEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub hash_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbsentOrHashEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub hash_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AbsentOrNotHashEqual {
    #[prost(bytes = "vec", tag = "1")]
    pub hash_to_check: ::prost::alloc::vec::Vec<u8>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Unconditional {}
