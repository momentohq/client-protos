syntax = "proto3";

package vectorindex;

service VectorIndex {
    rpc UpsertItemBatch(_UpsertItemBatchRequest) returns (_UpsertItemBatchResponse) {}
    rpc DeleteItemBatch(_DeleteItemBatchRequest) returns (_DeleteItemBatchResponse) {}
    rpc Search(_SearchRequest) returns (_SearchResponse) {}
    rpc SearchAndFetchVectors(_SearchAndFetchVectorsRequest) returns (_SearchAndFetchVectorsResponse) {}
}

message _Item {
    string id = 1;
    _Vector vector = 2;
    repeated _Metadata metadata = 3;
}

message _UpsertItemBatchRequest {
    string index_name = 1;
    repeated _Item items = 2;
}

message _UpsertItemBatchResponse {
    repeated uint32 error_indices = 1;
}

message _DeleteItemBatchRequest {
    string index_name = 1;
    repeated string ids = 2;
}

message _DeleteItemBatchResponse {
}

message _Vector {
    repeated float elements = 1;
}

message _Metadata {
    string field = 1;

    message _ListOfStrings {
        repeated string values = 1;
    }

    oneof value {
        string string_value = 2;
        int64 integer_value = 3;
        double double_value = 4;
        bool boolean_value = 5;
        _ListOfStrings list_of_strings_value = 6;
    }
}

message _MetadataRequest {
    message Some {
        repeated string fields = 1;
    }
    message All {}

    oneof kind {
        Some some = 2;
        All all = 3;
    }
}

message _NoScoreThreshold {}

message _SearchRequest {
    string index_name = 1;
    uint32 top_k = 2;
    _Vector query_vector = 3;
    _MetadataRequest metadata_fields = 4;
    oneof threshold {
        float score_threshold = 5;
        _NoScoreThreshold no_score_threshold = 6;
    }
}

message _SearchAndFetchVectorsRequest {
    string index_name = 1;
    uint32 top_k = 2;
    _Vector query_vector = 3;
    _MetadataRequest metadata_fields = 4;
    oneof threshold {
        float score_threshold = 5;
        _NoScoreThreshold no_score_threshold = 6;
    }
}

message _SearchHit {
    string id = 1;
    float distance = 2;
    repeated _Metadata metadata = 3;
}

message _SearchAndFetchVectorsHit {
    string id = 1;
    float distance = 2;
    repeated _Metadata metadata = 3;
    _Vector vector = 4;
}

message _SearchResponse {
    repeated _SearchHit hits = 1;
}

message _SearchAndFetchVectorsResponse {
    repeated _SearchAndFetchVectorsHit hits = 1;
}

message _GetItemBatchRequest {
  string index_name = 1;
  repeated string ids = 2;
  _MetadataRequest metadata_fields = 3;
}

message _ItemResponse {
  message _Miss {}
  message _Hit {
    string id = 1;
    repeated _Metadata metadata = 2;
  }
  oneof response {
    _Miss miss = 1;
    _Hit hit = 2;
  }
}

message _GetItemBatchResponse {
  repeated _ItemResponse item_response = 1;
}
